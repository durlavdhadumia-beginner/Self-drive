from pathlib import Path

path = Path("app.py")
text = path.read_text()
old = """@app.route(\"/admin/complaints/<int:complaint_id>/resolve\", methods=[\"POST\"])\n@login_required\n@admin_required\ndef resolve_complaint(complaint_id: int) -> str:\n    db = get_db()\n    complaint = db.execute(\"SELECT submitted_by FROM complaints WHERE id = ?\", (complaint_id,)).fetchone()\n    if complaint is None:\n        abort(404)\n    resolution = request.form.get(\"resolution\", \"\").strip()\n    now_iso = datetime.utcnow().isoformat()\n    db.execute(\n        \"UPDATE complaints SET status = 'resolved', resolved_at = ?, resolution = ? WHERE id = ?\",\n        (now_iso, resolution, complaint_id),\n    )\n    db.commit()\n    create_notification(complaint[\"submitted_by\"], \"Your complaint has been resolved by the admin team.\", url_for(\"rentals\"))\n    return redirect(url_for(\"admin_dashboard\"))\n\n\n"""
if old not in text:
    raise SystemExit("old resolve block not found")
new = """@app.route(\"/admin/complaints/<int:complaint_id>/resolve\", methods=[\"POST\"])\n@login_required\n@admin_required\ndef resolve_complaint(complaint_id: int) -> str:\n    db = get_db()\n    complaint = db.execute(\"SELECT submitted_by, role FROM complaints WHERE id = ?\", (complaint_id,)).fetchone()\n    if complaint is None:\n        abort(404)\n    resolution = request.form.get(\"resolution\", \"\").strip()\n    now_iso = datetime.utcnow().isoformat()\n    db.execute(\n        \"UPDATE complaints SET status = 'resolved', resolved_at = ?, resolution = ? WHERE id = ?\",\n        (now_iso, resolution, complaint_id),\n    )\n    db.commit()\n    redirect_target = url_for(\"rentals\") if complaint[\"role\"] == 'renter' else url_for(\"owner_cars\")\n    create_notification(complaint[\"submitted_by\"], \"Your complaint has been resolved by the admin team.\", redirect_target)\n    return redirect(url_for(\"admin_dashboard\"))\n\n\n"""
path.write_text(text.replace(old, new))
