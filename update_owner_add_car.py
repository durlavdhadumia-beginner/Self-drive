from pathlib import Path

path = Path("app.py")
text = path.read_text()
old = """def owner_add_car() -> str:\n    form = request.form\n    try:\n        seats = int(form.get(\"seats\", 4))\n        rate = float(form.get(\"rate_per_hour\", 0))\n        daily_rate_input = form.get(\"daily_rate\")\n        daily_rate = float(daily_rate_input) if daily_rate_input else rate * 24\n        latitude = float(form.get(\"latitude\"))\n        longitude = float(form.get(\"longitude\"))\n    except (TypeError, ValueError):\n        return redirect(url_for(\"owner_cars\"))\n    db = get_db()\n    cursor = db.execute(\n        \"\"\"\n        INSERT INTO cars (owner_id, name, brand, model, licence_plate, seats, rate_per_hour, daily_rate,\n                          latitude, longitude, city, image_url, fuel_type, transmission, description)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        \"\"\",\n        (\n            g.user[\"id\"],\n            form.get(\"name\") or f\"{form.get('brand', '')} {form.get('model', '')}\",\n            form.get(\"brand\", \"Unknown\"),\n            form.get(\"model\", \"Unknown\"),\n            form.get(\"licence_plate\", \"\"),\n            seats,\n            rate,\n            daily_rate,\n            latitude,\n            longitude,\n            form.get(\"city\", \"\"),\n            form.get(\"image_url\", \"\"),\n            form.get(\"fuel_type\", \"\"),\n            form.get(\"transmission\", \"\"),\n            form.get(\"description\", \"\"),\n        ),\n    )\n    car_id = cursor.lastrowid\n    save_car_images(car_id, request.files.getlist(\"photos\"))\n    db.commit()\n    return redirect(url_for(\"owner_cars\"))\n\n\n"""
if old not in text:
    raise SystemExit("exact owner_add_car block not found")
new = """def owner_add_car() -> str:\n    form = request.form\n    if not g.profile_complete:\n        return redirect(url_for(\"profile\", message=\"Complete your host profile before listing cars.\"))\n    try:\n        seats = int(form.get(\"seats\", 4))\n        rate = float(form.get(\"rate_per_hour\", 0))\n        daily_rate_input = form.get(\"daily_rate\")\n        daily_rate = float(daily_rate_input) if daily_rate_input else rate * 24\n        latitude = float(form.get(\"latitude\"))\n        longitude = float(form.get(\"longitude\"))\n    except (TypeError, ValueError):\n        return redirect(url_for(\"owner_cars\"))\n    vehicle_type = form.get(\"vehicle_type\", \"\").strip()\n    size_category = form.get(\"size_category\", \"\").strip()\n    has_gps = 1 if form.get(\"has_gps\") else 0\n    db = get_db()\n    cursor = db.execute(\n        \"\"\"\n        INSERT INTO cars (owner_id, name, brand, model, licence_plate, seats, rate_per_hour, daily_rate,\n                          vehicle_type, size_category, has_gps, latitude, longitude, city, image_url, fuel_type,\n                          transmission, description)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        \"\"\",\n        (\n            g.user[\"id\"],\n            form.get(\"name\") or f\"{form.get('brand', '')} {form.get('model', '')}\",\n            form.get(\"brand\", \"Unknown\"),\n            form.get(\"model\", \"Unknown\"),\n            form.get(\"licence_plate\", \"\"),\n            seats,\n            rate,\n            daily_rate,\n            vehicle_type,\n            size_category,\n            has_gps,\n            latitude,\n            longitude,\n            form.get(\"city\", \"\"),\n            form.get(\"image_url\", \"\"),\n            form.get(\"fuel_type\", \"\"),\n            form.get(\"transmission\", \"\"),\n            form.get(\"description\", \"\"),\n        ),\n    )\n    car_id = cursor.lastrowid\n    save_car_images(car_id, request.files.getlist(\"photos\"))\n    db.commit()\n    return redirect(url_for(\"owner_cars\"))\n\n\n"""
path.write_text(text.replace(old, new))
